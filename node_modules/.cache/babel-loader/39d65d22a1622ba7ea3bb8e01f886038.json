{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jakub/programming/fullstack_project/second_project/src/components/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport { Box, Center // FormControl,\n, FormLabel, Button, Input } from '@chakra-ui/react';\n\nconst LoginPage = () => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.login) {\n      errors.login = 'Required';\n    } else if (values.login !== localStorage.getItem('login')) {\n      errors.login = 'Invalid login';\n    }\n\n    if (!values.password) {\n      errors.password = 'Required';\n    } else if (values.password !== localStorage.getItem('password')) {\n      errors.password = 'Invalid password';\n    }\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      login: '',\n      password: ''\n    },\n    validate,\n    onSubmit: values => {\n      console.log(JSON.stringify(values, null, 2));\n    }\n  });\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      children: \"Hello user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this), formik.errors.login ? /*#__PURE__*/_jsxDEV(Box, {\n            children: formik.errors.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 30\n          }, this) : null, /*#__PURE__*/_jsxDEV(Input, {\n            id: \"login\",\n            name: \"login\",\n            type: \"text\",\n            onChange: formik.handleChange,\n            value: formik.values.login,\n            mb: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(Box, {\n            children: formik.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this) : null, /*#__PURE__*/_jsxDEV(Input, {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            onChange: formik.handleChange,\n            value: formik.values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"teal\",\n            variant: \"ghost\",\n            onClick: e => {\n              if (formik.values.login === localStorage.getItem('login') && formik.values.password === localStorage.getItem('password')) {\n                setIsLoggedIn(true);\n              }\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this);\n  }\n};\n\n_s(LoginPage, \"u7ggKz5N2b7ciYIV7J6SaMpOdlw=\", false, function () {\n  return [useFormik];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/jakub/programming/fullstack_project/second_project/src/components/LoginPage.js"],"names":["React","useFormik","useState","Box","Center","FormLabel","Button","Input","LoginPage","isLoggedIn","setIsLoggedIn","validate","values","errors","login","localStorage","getItem","password","formik","initialValues","onSubmit","console","log","JSON","stringify","handleSubmit","handleChange","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport {\n\tBox,\n\tCenter,\n\t// FormControl,\n\tFormLabel,\n\tButton,\n\tInput\n} from '@chakra-ui/react';\n\nconst LoginPage = () => {\n\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\tconst validate = values => {\n\t\tconst errors = {};\n\n\t\tif (!values.login) {\n\t\t\terrors.login = 'Required';\n\t\t} else if (values.login !== localStorage.getItem('login')) {\n\t\t\terrors.login = 'Invalid login';\n\t\t}\n\n\t\tif (!values.password) {\n\t\t\terrors.password = 'Required';\n\t\t} else if (values.password !== localStorage.getItem('password')) {\n\t\t\terrors.password = 'Invalid password';\n\t\t}\n\n\t\treturn errors;\n\t}\n\n\tconst formik = useFormik({\n\t\tinitialValues : {\n\t\t\tlogin: '',\n\t\t\tpassword: ''\n\t\t},\n\t\tvalidate,\n\t\tonSubmit: values => {\n\t\t\tconsole.log(JSON.stringify(values, null, 2))\n\t\t},\n\t});\n\n\tif (isLoggedIn) {\n\t\treturn (\n\t\t\t<Center>Hello user</Center>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<Center>\n\t\t\t\t<Box>\n\t\t\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t\t\t<FormLabel htmlFor='login'>Login</FormLabel>\n\t\t\t\t\t\t{formik.errors.login ? <Box>{formik.errors.login}</Box> : null}\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tid='login'\n\t\t\t\t\t\t\tname='login'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\tvalue={formik.values.login}\n\t\t\t\t\t\t\tmb='2'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormLabel htmlFor='password'>Password</FormLabel>\n\t\t\t\t\t\t{formik.errors.password ? <Box>{formik.errors.password}</Box> : null}\n\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\tvalue={formik.values.password}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button colorScheme='teal' variant='ghost' onClick={e => { if (formik.values.login === localStorage.getItem('login') && formik.values.password === localStorage.getItem('password')) {setIsLoggedIn(true)}}}>Login</Button>\n\t\t\t\t\t</form>\n\t\t\t\t</Box>\n\t\t\t</Center>\n\t\t)\n\t}\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}